# Angular
# 
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- none 

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.rr)

# stage build
stages:
- stage: Build
  displayName: Build Stage - DemoApp
  pool:
    vmImage: 'windows-latest'
    demands: npm

  jobs:
  - job: build
    displayName: Build DemoApp

    steps:
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: './src/DemoApp'
        verbose: true

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: './src/DemoApp'
        verbose: true
        customCommand: 'run build-pipeline'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/src/DemoApp/dist/demoapp/browser'
        artifact: 'DemoApp'

# stage Deploy runs if Build succeeds
- stage: Deploy
  displayName: Deploy Stage - DemoApp
  pool:
    vmImage: 'windows-latest'
  condition: succeeded('Build')

  jobs:
  - job: PROD
    displayName: Deploy to Production

    variables:
    - group: DemoApp

    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'current'
        artifact: 'DemoApp'
        path: $(Pipeline.Workspace)/s/src/DemoApp/dist/demoapp/browser

    - task: replacetokens@3
      inputs:
        rootDirectory: '$(Pipeline.Workspace)/s/src/DemoApp/dist/demoapp/browser'
        targetFiles: |
          **/*.js
          **/*.html
        encoding: 'auto'
        writeBOM: true
        verbosity: 'detailed'
        actionOnMissing: 'warn'
        keepToken: true
        actionOnNoFiles: 'continue'
        enableTransforms: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        enableRecursion: false
        useLegacyPattern: false
        enableTelemetry: true

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'ASUB-PYZ-01(38322fc3-28f3-4d53-9a11-fd5a0f94e99b)'
        appType: 'webApp'
        WebAppName: 'AngularAppNet8'
        deployToSlotOrASE: true
        ResourceGroupName: 'FreeResourceGroup'
        SlotName: 'production'
        VirtualApplication: '/DemoApp'
        packageForLinux: '$(Pipeline.Workspace)/s/src/DemoApp/dist/demoapp/browser'
